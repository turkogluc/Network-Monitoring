/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package network_monitoring_server;

import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import java.util.Timer;
import java.util.TimerTask;

/**
 *
 * @author asafgwe
 */
public class Splash_Screen extends javax.swing.JFrame {

    private float opacity, diff;
    private int opacityController = 0;

    /**
     * Creates new form Splash_Screen
     *
     */
    public Splash_Screen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setUndecorated(true);
        setOpacity(0.0F);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 884, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 504, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void setImage(String imagePath) {
        try {
            setLayout(new BorderLayout());
            BufferedImage backgroundImage = ImageIO.read(new File(imagePath));
            setContentPane(new JLabel(new ImageIcon(backgroundImage)));
            setLayout(new FlowLayout());
            setSize(backgroundImage.getWidth(), backgroundImage.getHeight());
            setLocationRelativeTo(null);
        } catch (IOException ex) {
            System.err.println(ex);
        }
    }

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        boolean isLoopDone = false;
        while (!isLoopDone) {
            switch (opacityController) {
                case 0:
                    changeFormOpacity();
                    break;
                case 2:
                    long now = System.currentTimeMillis();
                    long expectedElapsedTime = now + 2000;
                    while (now <= expectedElapsedTime) {
                        now = System.currentTimeMillis();
                    }
                    changeFormOpacity();
                    break;
                case 4:
                    isLoopDone = true;
                    break;
                default:
                    break;
            }
        }
        setVisible(false);
        long now = System.currentTimeMillis();
        long expectedElapsedTime = now + 10;
        while (now <= expectedElapsedTime) {
            now = System.currentTimeMillis();
        }
    }//GEN-LAST:event_formWindowActivated

    private void changeFormOpacity() {
        opacityController++;
        opacity = getOpacity();
        diff = (float) (opacity == 1 ? -0.001 : 0.001);
        Timer timer = new Timer();
        TimerTask task = new TimerTask() {
            @Override
            public void run() {
                opacity += diff;
                if (opacity >= 1) {
                    setOpacity(1.0f);
                    opacityController++;
                    timer.cancel();
                } else if (opacity <= 0) {
                    setOpacity(0.0f);
                    opacityController++;
                    timer.cancel();
                } else {
                    setOpacity(opacity);
                }
            }
        };
        timer.schedule(task, 0, 1);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Splash_Screen.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Splash_Screen.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Splash_Screen.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Splash_Screen.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Splash_Screen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
